<?xml version="1.0" encoding="UTF-8" ?>
<results version="2">
    <cppcheck version="2.1" />
    <errors>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;subject&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;subject&apos; a value by passing the value to the constructor in the initialization list." cwe="398">
            <location file="Genre.cpp" line="5" column="5" />
            <symbol>subject</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;title&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;title&apos; a value by passing the value to the constructor in the initialization list." cwe="398">
            <location file="Genre.cpp" line="6" column="5" />
            <symbol>title</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;subject&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;subject&apos; a value by passing the value to the constructor in the initialization list." cwe="398">
            <location file="Genre.cpp" line="11" column="5" />
            <symbol>subject</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;title&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;title&apos; a value by passing the value to the constructor in the initialization list." cwe="398">
            <location file="Genre.cpp" line="12" column="5" />
            <symbol>title</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;Dir&apos; should be passed by const reference." verbose="Parameter &apos;Dir&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file="Genre.cpp" line="10" column="26" />
            <symbol>Dir</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;Hero&apos; should be passed by const reference." verbose="Parameter &apos;Hero&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file="Genre.cpp" line="10" column="42" />
            <symbol>Hero</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;Heroine&apos; should be passed by const reference." verbose="Parameter &apos;Heroine&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file="Genre.cpp" line="10" column="59" />
            <symbol>Heroine</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;sub&apos; should be passed by const reference." verbose="Parameter &apos;sub&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file="Genre.cpp" line="10" column="90" />
            <symbol>sub</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;tit&apos; should be passed by const reference." verbose="Parameter &apos;tit&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file="Genre.cpp" line="10" column="106" />
            <symbol>tit</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language.">
            <location file0="Genre.h" file="Movie.h" line="4" column="1" />
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;Dir&apos; should be passed by const reference." verbose="Parameter &apos;Dir&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file="Movie.cpp" line="6" column="26" />
            <symbol>Dir</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;Hero&apos; should be passed by const reference." verbose="Parameter &apos;Hero&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file="Movie.cpp" line="6" column="42" />
            <symbol>Hero</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;Heroine&apos; should be passed by const reference." verbose="Parameter &apos;Heroine&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file="Movie.cpp" line="6" column="59" />
            <symbol>Heroine</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language.">
            <location file="Movie.h" line="4" column="1" />
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;Dir&apos; should be passed by const reference." verbose="Parameter &apos;Dir&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file="Moviedb.cpp" line="14" column="47" />
            <symbol>Dir</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;Hero&apos; should be passed by const reference." verbose="Parameter &apos;Hero&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file="Moviedb.cpp" line="26" column="39" />
            <symbol>Hero</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;Heroine&apos; should be passed by const reference." verbose="Parameter &apos;Heroine&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file="Moviedb.cpp" line="36" column="43" />
            <symbol>Heroine</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language.">
            <location file0="Moviedb.h" file="Movie.h" line="4" column="1" />
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;addMovie&apos; is never used." verbose="The function &apos;addMovie&apos; is never used." cwe="561">
            <location file="Moviedb.cpp" line="3" column="0" />
            <symbol>addMovie</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;countAll&apos; is never used." verbose="The function &apos;countAll&apos; is never used." cwe="561">
            <location file="Moviedb.cpp" line="6" column="0" />
            <symbol>countAll</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;countMovieByDirector&apos; is never used." verbose="The function &apos;countMovieByDirector&apos; is never used." cwe="561">
            <location file="Moviedb.cpp" line="14" column="0" />
            <symbol>countMovieByDirector</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;findMovieById&apos; is never used." verbose="The function &apos;findMovieById&apos; is never used." cwe="561">
            <location file="Moviedb.cpp" line="36" column="0" />
            <symbol>findMovieById</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getBudget&apos; is never used." verbose="The function &apos;getBudget&apos; is never used." cwe="561">
            <location file="Movie.cpp" line="18" column="0" />
            <symbol>getBudget</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getLength&apos; is never used." verbose="The function &apos;getLength&apos; is never used." cwe="561">
            <location file="Genre.cpp" line="20" column="0" />
            <symbol>getLength</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getRating&apos; is never used." verbose="The function &apos;getRating&apos; is never used." cwe="561">
            <location file="Genre.cpp" line="22" column="0" />
            <symbol>getRating</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getSubject&apos; is never used." verbose="The function &apos;getSubject&apos; is never used." cwe="561">
            <location file="Genre.cpp" line="16" column="0" />
            <symbol>getSubject</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;getTitle&apos; is never used." verbose="The function &apos;getTitle&apos; is never used." cwe="561">
            <location file="Genre.cpp" line="18" column="0" />
            <symbol>getTitle</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;removeMovie&apos; is never used." verbose="The function &apos;removeMovie&apos; is never used." cwe="561">
            <location file="Moviedb.cpp" line="26" column="0" />
            <symbol>removeMovie</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config." />
    </errors>
</results>
